// http://projecteuler.net/problem=2

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
// By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
// find the sum of the even-valued terms.

// F1 = 1
// F2 = 2
// Fi = Fi-1 + Fi-2
package com.ryanponeill.euler

object Problem02 {
  import Euler._

  def main(args: Array[String]) {
    println(go(4000000))
  }

  def apply(n: Long): String = go(n)

  def go(n: Long): String = {
    val output = "Sum of even Fibonacci values up to %d: "
    getOutput(output, evenFibSum)(n)
  }

  def evenFibSum(n: Long): Long =
    even(to(fibsFrom(1,2), n)).sum
}
