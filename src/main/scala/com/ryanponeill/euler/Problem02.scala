// http://projecteuler.net/problem=2

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
// By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
// find the sum of the even-valued terms.

// Normal Fibonacci Recurrence
// F0 = 0
// F1 = 1
// Fi = Fi-1 + Fi-2
package com.ryanponeill.euler

object Problem02 {
  def main(args: Array[String]) {
    val limit = 4000000
    println(evenValuedFibonacciSum(limit))
  }

  def evenValuedFibonacciSum(upperBound: Int) = 
    fibsFrom(1,2).takeWhile(_ <= upperBound).filter(_ % 2 == 0).sum

  def fibsFrom(x: Int, y: Int): Stream[Int] =
    x #:: fibsFrom(y,x+y)

}
